import React, { useState, useEffect } from 'react';
import { View, Text, Button, TextInput, Picker, StyleSheet } from 'react-native';
import MapView, { Marker } from 'react-native-maps';
import axios from 'axios';


// Version 1.0000
const AustinNightclubsMap = () => {
    
    const [nightclubs, setNightclubs] = useState([]);
    const [filteredNightclubs, setFilteredNightclubs] = useState([]);
    const [location, setLocation] = useState(null);
    const [ratingFilter, setRatingFilter] = useState(0);
    const [capacityFilter, setCapacityFilter] = useState(0);
    const [priceFilter, setPriceFilter] = useState(0);

// Esta parte me tarde como 3 horas no mames jaja
    const fetchNightclubs = async () => {
        try {
            const response = await axios.get('https://example.com/nightclubs'); 
            setNightclubs(response.data);
            setFilteredNightclubs(response.data);  
        } catch (error) {
            console.error("Error fetching nightclubs:", error);
        }
    };

    // Function to apply filters
    const applyFilters = () => {
        let filtered = nightclubs;

        if (ratingFilter > 0) {
            filtered = filtered.filter(nightclub => nightclub.rating >= ratingFilter);
        }
        if (capacityFilter > 0) {
            filtered = filtered.filter(nightclub => nightclub.capacity >= capacityFilter);
        }
        if (priceFilter > 0) {
            filtered = filtered.filter(nightclub => nightclub.price <= priceFilter);
        }

        setFilteredNightclubs(filtered);
    };

    
    useEffect(() => {
        fetchNightclubs();
    }, []);

  
    return (
        <View style={{ flex: 1 }}>
            {/* Map */}
            <MapView
                style={{ flex: 1 }}
                initialRegion={{
                    latitude: 30.2672,
                    longitude: -97.7431,
                    latitudeDelta: 0.0922,
                    longitudeDelta: 0.0421,
                }}
            >
                {filteredNightclubs.map((nightclub, index) => (
                    <Marker
                        key={index}
                        coordinate={{ latitude: nightclub.latitude, longitude: nightclub.longitude }}
                        title={nightclub.name}
                        description={`Rating: ${nightclub.rating}, Capacity: ${nightclub.capacity}`}
                    />
                ))}
            </MapView>

            {/* Filters */}
            <View style={styles.filterContainer}>
                <Text>Filter Nightclubs</Text>
                <Text>Rating</Text>
                <Picker
                    selectedValue={ratingFilter}
                    onValueChange={(itemValue) => setRatingFilter(itemValue)}
                >
                    <Picker.Item label="Any Rating" value={0} />
                    <Picker.Item label="Above 3" value={3} />
                    <Picker.Item label="Above 4" value={4} />
                    <Picker.Item label="Above 5" value={5} />
                </Picker>

                <Text>Capacity</Text>
                <Picker
                    selectedValue={capacityFilter}
                    onValueChange={(itemValue) => setCapacityFilter(itemValue)}
                >
                    <Picker.Item label="Any Capacity" value={0} />
                    <Picker.Item label="Above 50" value={50} />
                    <Picker.Item label="Above 100" value={100} />
                    <Picker.Item label="Above 200" value={200} />
                </Picker>

                <Text>Price</Text>
                <Picker
                    selectedValue={priceFilter}
                    onValueChange={(itemValue) => setPriceFilter(itemValue)}
                >
                    <Picker.Item label="Any Price" value={0} />
                    <Picker.Item label="Below $50" value={50} />
                    <Picker.Item label="Below $100" value={100} />
                    <Picker.Item label="Below $150" value={150} />
                </Picker>

                <Button title="Apply Filters" onPress={applyFilters} />
            </View>
        </View>
    );
};

// Aqui pueden cambiar los colores y estilos de los filtros
const styles = StyleSheet.create({
    filterContainer: {
        padding: 20,
        backgroundColor: 'white',
        borderTopWidth: 1,
        borderTopColor: '#ddd',
    },
});

export default AustinNightclubsMap;
